# pool:
#   vmImage: 'ubuntu-16.04'

# resources:
#   containers:
#   - container: py37
#     image: python:3.7-slim

jobs:
# - job: BuildContainer
#   displayName: Building Container
#   steps:
#   - script: docker-compose --file tests/docker-compose build
- job: RunInContainer
  displayName: Tox Tests
  pool:
    vmImage: 'ubuntu-16.04'

  strategy:
    matrix:
      lint:
        # containerResource: py37
        toxenv: lint
      pytest:
        # containerResource: py37
        toxenv: py37

  # container: $[ variables['containerResource'] ]
  container: python:3.7-slim

  steps:
  - script: whoami
  - script: apt-get -qq update
  - script: DEBIAN_FRONTEND=noninteractive apt-get -yqq --no-install-suggests --no-install-recommends install libc6-dev libffi-dev gcc g++ make git > /dev/null &&\
  - script: pip3 install --user 'tox==3.12.1'
  - script: python3 -m tox

# pool:
#   vmImage: 'ubuntu-16.04'
# container: ubuntu:16.04
# steps:
# - script: printenv