name: $(Date:yyyyMMdd)$(Rev:.r)
variables:  # default values
  PY_VER: '3.7'
  IMG_VARIANT: '-slim'

# Do not depend on platform enviroment
# https://hynek.me/articles/simple-python-azure-pipelines/
# Also more easily repoducable on local machine
stages:

- stage: 'Tox'
  jobs:
  - template: .ci/azure-job-python-tox.yml
    parameters:
      name: 'Env'
  - template: .ci/azure-job-python-tox.yml
    parameters:
      name: 'PyTest'
      publishresults: True

#   - job: 'Env'
#     pool:
#       vmImage: 'Ubuntu-16.04'
#     strategy:
#       matrix:
#         lint:
#           TOXENV: 'lint'
#         style:
#           TOXENV: 'style'
#         package:
#           TOXENV: 'pkg'
#     steps:
#     - script: docker-compose --file tests/docker-compose.yml build
#       displayName: 'Build container'
#     - script: docker-compose --file tests/docker-compose.yml run tox
#       displayName: 'Run Tox'

# # - stage: 'PyTest'
# #   dependsOn: []
# #   jobs:
# #   - job: 'Py'
#   - job: 'PyTest'
#     # dependsOn: []
#     pool:
#       vmImage: 'Ubuntu-16.04'
#     strategy:
#       matrix:
#         35:
#           PY_VER: '3.5'
#         36:
#           PY_VER: '3.6'
#         37:
#           PY_VER: '3.7'
#     steps:
#     - script: docker-compose --file tests/docker-compose.yml build
#       displayName: 'Build container'
#     - script: |
#         export TOXENV="py${PY_VER//.}"
#         docker-compose --file tests/docker-compose.yml run tox
#       displayName: 'Run Tox'
#     - task: PublishTestResults@2
#       condition: succeededOrFailed()
#       inputs:
#         testResultsFiles: '**/test-*.xml'
#         testRunTitle: 'Publish test results for Python $(python.version)'
#     - task: PublishCodeCoverageResults@1
#       inputs:
#         codeCoverageTool: Cobertura
#         summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
#         reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'

- stage: 'Publish'
  jobs:
  - job: 'Package'
    pool:
      vmImage: 'Ubuntu-16.04'
    steps:
    - script: echo 'TODO - python setup wheel && twine'