name: $(Date:yyyyMMdd)$(Rev:.r)
# pool:
#   vmImage: 'ubuntu-16.04'

# resources:
#   containers:
#   - container: py37
#     image: python:3.7-slim

jobs:
- job: 'Tox'
  pool:
    vmImage: 'Ubuntu-16.04'
  strategy:
    matrix:
      lint:
        toxenv: lint
      style:
        toxenv: style
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7'
  - script: pip install tox
  - script: tox

- job: 'PyTest'
  pool:
    vmImage: 'Ubuntu-16.04'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 2
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
  - script: pip install tox
# - job: BuildContainer
#   displayName: Building Container
#   steps:
#   - script: docker-compose --file tests/docker-compose build
# - job: RunInContainer
#   displayName: Tox Tests
#   pool:
#     vmImage: 'ubuntu-16.04'

#   strategy:
#     matrix:
#       lint:
#         # containerResource: py37
#         toxenv: lint
#       pytest:
#         # containerResource: py37
#         toxenv: py37

#   # container: $[ variables['containerResource'] ]
#   container: python:3.7-slim

#   steps:
#   - script: whoami
#   - script: apt-get -qq update
#   - script: DEBIAN_FRONTEND=noninteractive apt-get -yqq --no-install-suggests --no-install-recommends install libc6-dev libffi-dev gcc g++ make git > /dev/null &&\
#   - script: pip3 install --user 'tox==3.12.1'
#   - script: python3 -m tox

# pool:
#   vmImage: 'ubuntu-16.04'
# container: ubuntu:16.04
# steps:
# - script: printenv